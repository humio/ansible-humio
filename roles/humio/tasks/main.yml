---

- name: Create Humio directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /usr/lib/humio
    - /etc/humio

- name: Create humio user
  user:
    name: humio

- name: Create /var/humio/data
  file:
    path: /var/humio/data/{{ humio_host_id }}-{{item}}
    state: directory
    owner: humio
  with_sequence: start=0 end=0

- name: Download Humio jar
  get_url:
    url: "https://repo.humio.com/repository/maven-public/com/humio/server/{{ humio_version }}/server-{{ humio_version }}.jar"
    dest: "/usr/lib/humio/server-{{ humio_version }}.jar"
  notify: Restart Humio

- name: Humio configuration file
  copy:
    content: |
      DIRECTORY=/var/humio/data/{{ humio_host_id }}-{{ item }}
      HUMIO_AUDITLOG_DIR=/var/log/humio/{{ item }}
      HUMIO_DEBUGLOG_DIR=/var/log/humio/{{ item }}
      HUMIO_PORT={{ 8080 + item|int }}
      ELASTIC_PORT={{ 9200 + item|int }}
      KAFKA_SERVERS={{ groups['kafkas'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | join(':9092,') }}:9092
      ZOOKEEPER_URL={{ groups['zookeepers'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | join(':2181,') }}:2181
      EXTERNAL_URL=http://{{ ansible_default_ipv4['address'] }}:{{ 8080 + item|int }}
    dest: "/etc/humio/server_{{ item }}.conf"
  with_sequence: start=0 end={{ humio_instance_index }}
  notify: Restart Humio

- name: Create Humio SystemD unit configuration
  copy:
    content: |
      [Unit]
        Description=Humio service
        Requires=kafka.service
        After=kafka.service

      [Service]
        User=humio
        EnvironmentFile=/etc/humio/server_%i.conf
        WorkingDirectory=/var/humio
        ExecStart=/usr/bin/java -Xss2M -XX:MaxDirectMemorySize=32G -Dhumio.auditlog.dir=${HUMIO_AUDITLOG_DIR} -Dhumio.debuglog.dir=${HUMIO_DEBUGLOG_DIR} -jar /usr/lib/humio/server-{{ humio_version }}.jar

      [Install]
        WantedBy=default.target
    dest: /etc/systemd/system/humio@.service
  notify: Restart Humio

- name: Enable Humio service
  service:
    name: "humio@{{ item }}"
    enabled: yes
    state: started
  with_sequence: start=0 end={{ humio_instance_index }}
